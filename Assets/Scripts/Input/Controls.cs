//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""47f1f1f8-be89-4d6b-8119-d1b9933e0117"",
            ""actions"": [
                {
                    ""name"": ""Movement_hor"",
                    ""type"": ""Button"",
                    ""id"": ""9b852a90-f6c1-4b3c-a04c-e0fa00922f1f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement_ver"",
                    ""type"": ""Button"",
                    ""id"": ""14768112-542b-4a0f-ab64-5b449f720c38"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""b6d8c5a3-292e-4151-94ff-ff3858723ea9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""5fd84af5-d1cf-4dbc-8fa0-62982522db8a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""38839c40-b80d-46f5-aecf-9a2d8823f69b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_hor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1b4c528e-8f4e-4dc1-b33f-f81eacac8aff"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_hor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ef8a99a9-c726-4b41-ab75-407a52b912fe"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_hor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""399d9a9a-a3e2-49f2-89bf-1329a1edc331"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_hor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""42546a02-193a-4e0c-8e5b-0cd673a95fad"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_hor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""54d55242-45b7-4ca1-ba9c-f32e1e124a81"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_hor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""e8e460be-9d4f-4d0d-9d94-49fd2afb381c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_ver"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d7529600-3b1c-4706-aaa8-556dd174716d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_ver"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8c645c5f-f432-410e-abee-0ba1c644e3e3"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_ver"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""4ab82d12-fb52-40e2-af6a-3ac441a60b81"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_ver"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2c22416c-8f56-4355-a7f2-5eac382a93e4"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_ver"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e18e4f07-ca12-4a19-a84e-ecb9a497066b"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_ver"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""20103521-8aeb-43fd-a26d-09386cb28931"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""395c678c-1107-4c67-8fe6-53f54017ba3f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09cbd1d4-0385-4bbd-8eec-5f3bd875c841"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d7a0bab0-8ed8-42b7-a854-8956e7377d80"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d7ac0f76-a4e0-46f8-a279-cc18706f7cbf"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""33693260-40fe-485d-a686-7af9134c0340"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ea112b93-7c01-4dd3-8193-fadba493008d"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""77e65fcc-61a5-4ff8-9cb2-821a5aadab75"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""LevelMenu"",
            ""id"": ""71eb166e-6c98-482d-ae99-37283ce6dbd3"",
            ""actions"": [
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""e5e214e5-7cdc-417a-9231-71d761f5a0e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""42b5c754-4ee6-4ba9-8699-d01a03e0d85f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9b24157-f3ff-4704-b4dd-029a7832e746"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MainMenu"",
            ""id"": ""0a22b030-e84f-409d-974d-8e434c92fd50"",
            ""actions"": [
                {
                    ""name"": ""Move_down"",
                    ""type"": ""Button"",
                    ""id"": ""0172ce78-efa6-47ac-b1ca-b89675b19dec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move_up"",
                    ""type"": ""Button"",
                    ""id"": ""a85162a5-d5ab-4dc9-ab77-9a4a9324ee4a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""efe63f3b-1841-4f09-92bb-e003589dd1ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse_hor"",
                    ""type"": ""Value"",
                    ""id"": ""a500c536-e144-4b93-8db7-da287327c146"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse_ver"",
                    ""type"": ""Value"",
                    ""id"": ""5c3ef3ee-910c-40c4-beaf-20a4aa6dacd3"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8a7b9875-c4ce-4d67-a3fd-df7186e54739"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57532c21-abe6-42ff-84dc-30ea4778c2c6"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c0d2f94-02ad-44f2-8290-372251c3c525"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5cf7e093-497c-435d-a197-d943745c73d2"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1cb55bde-5dcc-4ec3-ba61-e385707a7532"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f981d75-b05f-4b19-ad41-66d16ce313cf"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1cb5089b-d032-4b49-9c13-11cb988ebccb"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6741fa2b-2389-40df-adf0-ead275f122fd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22dc55bf-354f-4fab-845e-c8928aa7b79d"",
                    ""path"": ""<Mouse>/position/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse_hor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f8ac134-dda0-4aac-ba1e-3c332c25129f"",
                    ""path"": ""<Mouse>/position/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse_ver"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Movement_hor = m_Gameplay.FindAction("Movement_hor", throwIfNotFound: true);
        m_Gameplay_Movement_ver = m_Gameplay.FindAction("Movement_ver", throwIfNotFound: true);
        m_Gameplay_Interact = m_Gameplay.FindAction("Interact", throwIfNotFound: true);
        m_Gameplay_Look = m_Gameplay.FindAction("Look", throwIfNotFound: true);
        // LevelMenu
        m_LevelMenu = asset.FindActionMap("LevelMenu", throwIfNotFound: true);
        m_LevelMenu_Start = m_LevelMenu.FindAction("Start", throwIfNotFound: true);
        // MainMenu
        m_MainMenu = asset.FindActionMap("MainMenu", throwIfNotFound: true);
        m_MainMenu_Move_down = m_MainMenu.FindAction("Move_down", throwIfNotFound: true);
        m_MainMenu_Move_up = m_MainMenu.FindAction("Move_up", throwIfNotFound: true);
        m_MainMenu_Click = m_MainMenu.FindAction("Click", throwIfNotFound: true);
        m_MainMenu_Mouse_hor = m_MainMenu.FindAction("Mouse_hor", throwIfNotFound: true);
        m_MainMenu_Mouse_ver = m_MainMenu.FindAction("Mouse_ver", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Movement_hor;
    private readonly InputAction m_Gameplay_Movement_ver;
    private readonly InputAction m_Gameplay_Interact;
    private readonly InputAction m_Gameplay_Look;
    public struct GameplayActions
    {
        private @Controls m_Wrapper;
        public GameplayActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement_hor => m_Wrapper.m_Gameplay_Movement_hor;
        public InputAction @Movement_ver => m_Wrapper.m_Gameplay_Movement_ver;
        public InputAction @Interact => m_Wrapper.m_Gameplay_Interact;
        public InputAction @Look => m_Wrapper.m_Gameplay_Look;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Movement_hor.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement_hor;
                @Movement_hor.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement_hor;
                @Movement_hor.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement_hor;
                @Movement_ver.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement_ver;
                @Movement_ver.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement_ver;
                @Movement_ver.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement_ver;
                @Interact.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteract;
                @Look.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLook;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement_hor.started += instance.OnMovement_hor;
                @Movement_hor.performed += instance.OnMovement_hor;
                @Movement_hor.canceled += instance.OnMovement_hor;
                @Movement_ver.started += instance.OnMovement_ver;
                @Movement_ver.performed += instance.OnMovement_ver;
                @Movement_ver.canceled += instance.OnMovement_ver;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // LevelMenu
    private readonly InputActionMap m_LevelMenu;
    private ILevelMenuActions m_LevelMenuActionsCallbackInterface;
    private readonly InputAction m_LevelMenu_Start;
    public struct LevelMenuActions
    {
        private @Controls m_Wrapper;
        public LevelMenuActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Start => m_Wrapper.m_LevelMenu_Start;
        public InputActionMap Get() { return m_Wrapper.m_LevelMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LevelMenuActions set) { return set.Get(); }
        public void SetCallbacks(ILevelMenuActions instance)
        {
            if (m_Wrapper.m_LevelMenuActionsCallbackInterface != null)
            {
                @Start.started -= m_Wrapper.m_LevelMenuActionsCallbackInterface.OnStart;
                @Start.performed -= m_Wrapper.m_LevelMenuActionsCallbackInterface.OnStart;
                @Start.canceled -= m_Wrapper.m_LevelMenuActionsCallbackInterface.OnStart;
            }
            m_Wrapper.m_LevelMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Start.started += instance.OnStart;
                @Start.performed += instance.OnStart;
                @Start.canceled += instance.OnStart;
            }
        }
    }
    public LevelMenuActions @LevelMenu => new LevelMenuActions(this);

    // MainMenu
    private readonly InputActionMap m_MainMenu;
    private IMainMenuActions m_MainMenuActionsCallbackInterface;
    private readonly InputAction m_MainMenu_Move_down;
    private readonly InputAction m_MainMenu_Move_up;
    private readonly InputAction m_MainMenu_Click;
    private readonly InputAction m_MainMenu_Mouse_hor;
    private readonly InputAction m_MainMenu_Mouse_ver;
    public struct MainMenuActions
    {
        private @Controls m_Wrapper;
        public MainMenuActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move_down => m_Wrapper.m_MainMenu_Move_down;
        public InputAction @Move_up => m_Wrapper.m_MainMenu_Move_up;
        public InputAction @Click => m_Wrapper.m_MainMenu_Click;
        public InputAction @Mouse_hor => m_Wrapper.m_MainMenu_Mouse_hor;
        public InputAction @Mouse_ver => m_Wrapper.m_MainMenu_Mouse_ver;
        public InputActionMap Get() { return m_Wrapper.m_MainMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainMenuActions set) { return set.Get(); }
        public void SetCallbacks(IMainMenuActions instance)
        {
            if (m_Wrapper.m_MainMenuActionsCallbackInterface != null)
            {
                @Move_down.started -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMove_down;
                @Move_down.performed -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMove_down;
                @Move_down.canceled -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMove_down;
                @Move_up.started -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMove_up;
                @Move_up.performed -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMove_up;
                @Move_up.canceled -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMove_up;
                @Click.started -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnClick;
                @Mouse_hor.started -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMouse_hor;
                @Mouse_hor.performed -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMouse_hor;
                @Mouse_hor.canceled -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMouse_hor;
                @Mouse_ver.started -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMouse_ver;
                @Mouse_ver.performed -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMouse_ver;
                @Mouse_ver.canceled -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMouse_ver;
            }
            m_Wrapper.m_MainMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move_down.started += instance.OnMove_down;
                @Move_down.performed += instance.OnMove_down;
                @Move_down.canceled += instance.OnMove_down;
                @Move_up.started += instance.OnMove_up;
                @Move_up.performed += instance.OnMove_up;
                @Move_up.canceled += instance.OnMove_up;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @Mouse_hor.started += instance.OnMouse_hor;
                @Mouse_hor.performed += instance.OnMouse_hor;
                @Mouse_hor.canceled += instance.OnMouse_hor;
                @Mouse_ver.started += instance.OnMouse_ver;
                @Mouse_ver.performed += instance.OnMouse_ver;
                @Mouse_ver.canceled += instance.OnMouse_ver;
            }
        }
    }
    public MainMenuActions @MainMenu => new MainMenuActions(this);
    public interface IGameplayActions
    {
        void OnMovement_hor(InputAction.CallbackContext context);
        void OnMovement_ver(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
    }
    public interface ILevelMenuActions
    {
        void OnStart(InputAction.CallbackContext context);
    }
    public interface IMainMenuActions
    {
        void OnMove_down(InputAction.CallbackContext context);
        void OnMove_up(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnMouse_hor(InputAction.CallbackContext context);
        void OnMouse_ver(InputAction.CallbackContext context);
    }
}
